#include<stdio.h>
#include<conio.h>
#include<ctype.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>
#include<stdbool.h>
#include<windows.h>
struct quiz	
{
	char str[300];
	char a[50];
	char b[50];
	char c[50];
	char d[50];
	char right;
};
struct quiz q;

static int life_50=1;
static int life_skip=1;

char show_question(int n);
void help();
void rules();
void homepage();
int start();
int select_question(int n);
int edit_score(int n);
int lifelines();
char is_valid_timer(char option,int timer,int time);
char is_valid_no_timer(char option);

void gotoxy(short x, short y) 
{
	COORD pos = {x, y};
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

int wherex()
{
    CONSOLE_SCREEN_BUFFER_INFO csbi;
    GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &csbi);
    return csbi.dwCursorPosition.X;
}

int wherey()
{
    CONSOLE_SCREEN_BUFFER_INFO csbi;
    GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &csbi);
    return csbi.dwCursorPosition.Y;
}

int main()
{
	int i,prize;
	char choice;
	char playername[20];
	homepage();
	choice=toupper(getch());
	if(choice!='Q' && choice!='H' && choice!='S')
	{
		printf("Please enter a valid choice!!");
		getch();
		main();
	}
	if (choice=='Q')
		exit(1);
	else if (choice=='H')
	{
		help();
	}
    else if(choice=='S')
    {
    	system("cls");
    	printf("\n\n\n\n\n\t\t\tEnter your name:");
    	gets(playername);
    	prize=start();
	}
	if(prize==0)
		printf("\n\n\t\t Sorry!! %s \n\n\t\tYou didn't won any money",playername);
	else if(prize==10000000)
	{
		printf("\n\n\t\t Congratulations!!! %s  you are now a Crorepati",playername);
		printf("\n\n\t\tYou Won Rs. %d",prize);
	}
	else
	{
		printf("\n\n\t\t Congratulations!!! %s",playername);
		printf("\n\n\t\tYou Won Rs. %d",prize);
	}
}

int start()
{
	int i,j,r,x,y,timer,lifeline,money,prize=0;
	bool arr[15]={0};
	char answer,option='0';
	
    system("cls");
    
    rules();
    system("cls");
    
    srand(time(0));
    
    for(i=0;i<15;i++)
    {
    	system("cls");
    	printf("\n\tAvailable Lifelines: ");
		if(life_50)
			printf("\t50-50");
		if(life_skip)
			printf("\tSKIP");
		if(!life_50 && !life_skip)
			printf("No Lifelines Available!!");
		if(life_50 || life_skip)
    		printf("\n\tPress Q to quit and L for lifeline!!\n");
    	else 
    		printf("\n\tPress Q to quit!!\n");
    	for(j=0;j<10;++j)
		{
		    r=rand()%15;
		    if(!arr[r])
		    {
		    	arr[r]=1;
		    	break;
			}
		    else
		      j--;  
		}
		money=edit_score(i);
		printf("\nQ. %d\t\tPrize Money: %d\t\tWinning: %d\n",i+1,money,prize);
    	answer=show_question(r);
    	printf("\nChoose your answer: ");
    	x=wherex();
    	y=wherey();
    	fflush(stdin);
    	option='0';
    	if(i>=0 && i<5)
    	{
    		for(timer=1;timer<=30;timer++)
	    	{
	    		gotoxy(75,4);
	    		printf("%d",timer);
	    		gotoxy(x,y);
	    		if(kbhit())
	    		{
	    			option=toupper(getch());
	    			option=is_valid_timer(option,timer,30);
	    			break;
				}
				sleep(1);
			}
			if(option=='0')
			{
				printf("Sorry you ran out of time!!");
				i--;
			}
			prize=0;
		}
		else if(i>=5 && i<10)
    	{
    		for(timer=1;timer<=60;timer++)
	    	{
	    		gotoxy(75,4);
	    		printf("%d",timer);
	    		gotoxy(x,y);
	    		if(kbhit())
	    		{
	    			option=toupper(getch());
	    			option=is_valid_timer(option,timer,60);
	    			break;
				}
				sleep(1);
			}
			if(option=='0')
			{
				printf("Sorry you ran out of time!!");
				i--;
			}
			prize=10000;
		}
		else
		{
			option=toupper(getch());
			option=is_valid_no_timer(option);
			prize=320000;
		}
		
		sleep(1);
		
		if(option=='Q')
			break;
		else if(option=='L')
		{
			lifeline=lifelines();
			if(lifeline==1)
			{
				printf("\nChoose your first option: ");
				option=toupper(getch());
				if(option==answer)
				{
					printf("Correct Answer!!");
					sleep(2);
					prize=edit_score(i);
				}
				else
				{
					printf("\nChoose your second option: ");
					option=toupper(getch());
					if(option==answer)
					{
						printf("Correct Answer!!");
						sleep(2);
						prize=edit_score(i);
					}
					else
					{
						printf("Wrong Answer!!");
						break;
					}
				}
			}
			else
			{
				i--;
				sleep(2);
				continue;
			}
		}
		else if(option!=answer)
		{
			if(option!='0')
    			printf("Wrong Answer!!");
    		break;
		}
		else
		{
			printf("Correct Answer!!");
			sleep(2);
			prize=edit_score(i);
		}
	}
	return prize;
}

char show_question(int n)
{
	int offset;
	char answer;
	FILE *fp;
	fp=fopen("Quiz.txt","rb");
	offset=sizeof(q)*n;
	fseek(fp,offset,SEEK_CUR);
	fread(&q,sizeof(q),1,fp);
	printf("\n%s \n\n%-30s %-30s \n%-30s %-30s\n",q.str,q.a,q.b,q.c,q.d);
	answer=q.right;
	return answer;
}

void homepage()
{
	system("cls");
	printf("\t\t\tC PROGRAM QUIZ GAME\n");
	printf("\n\t\t________________________________________");
	printf("\n\t\t\t   WELCOME ");
	printf("\n\t\t\t      to ");
	printf("\n\t\t\t   THE GAME ");
	printf("\n\t\t________________________________________");
	printf("\n\t\t________________________________________");
	printf("\n\t\t   BECOME A CROREPATI!!!!!!!!!!!    ") ;
	printf("\n\t\t________________________________________");
	printf("\n\t\t________________________________________");
	printf("\n\t\t > Press S to start the game");
	printf("\n\t\t > press H for help            ");
	printf("\n\t\t > press Q to quit             ");
	printf("\n\t\t________________________________________\n\n");
}

int edit_score(int n)
{
	int prize;
	switch(n)
	{
		case 0:
			prize=1000;
			break;
		case 1:
			prize=2000;
			break;
		case 2:
			prize=3000;
			break;
		case 3:
			prize=5000;
			break;
		case 4:
			prize=10000;
			break;
		case 5:
			prize=20000;
			break;
		case 6:
			prize=40000;
			break;
		case 7:
			prize=80000;
			break;
		case 8:
			prize=160000;
			break;
		case 9:
			prize=320000;
			break;
		case 10:
			prize=640000;
			break;
		case 11:
			prize=1250000;
			break;
		case 12:
			prize=2500000;
			break;
		case 13:
			prize=5000000;
			break;
		case 14:
			prize=10000000;
			break;
	}
	return prize;
}

void help()
{
	system("cls");
	printf("It is a Technical Quiz Game consisting of C programming questions!!");
	printf("\n\nThere are total 15 questions in this game. \nIf you answer all the 15 questions correctly then you will become a Crorepati.");
	printf("\n\nYou will get 30 seconds each for the first 5 questions and 60 seconds for the next 5 questions.");
	printf("\nAfter that you will have unlimited time.");
	printf("\n\nThere are 2 lifelines in this game:  50-50  and  SKIP");
	printf("\nIn the 50-50 lifeline you can choose 2 answers for the same question.");
	printf("\nAnd in the SKIP lifeline you can ask to change that question");
	printf("\nNote that the lifeline cannot be used for final question.");
	printf("\n\nYou can quit the game anytime you want and will win the current prize money.");
	printf("\nBut if you answer a question wrong then you will fall below checkpoints: ");
	printf("\nFor example if answer give a wrong answer for the question 1 to 5, then you will fall down to Rs. 0.");
	printf("\nSimilarly if answer give a wrong answer for the question 6 to 10, then you will fall down to Rs. 10000.");
	printf("\nSimilarly if answer give a wrong answer for the question 11 to 15, then you will fall down to Rs. 320000.");
	printf("\n\n\n\tPress any key to return to Welcome page!!");
	if(getch())
		main();
}

void rules()
{
	system("cls");
	printf("\n\nThere are total 15 questions in this game. \nIf you answer all the 15 questions correctly then you will become a Crorepati.");
	printf("\n\nYou will get 30 seconds each for the first 5 questions and 60 seconds for the next 5 questions.");
	printf("\nAfter that you will have unlimited time.");
	printf("\n\nThere are 2 lifelines in this game:  50-50  and  SKIP");
	printf("\nIn the 50-50 lifeline you can choose 2 answers for the same question.");
	printf("\nAnd in the SKIP lifeline you can ask to change that question");
	printf("\nNote that the lifeline cannot be used for final question.");
	printf("\n\nYou can quit the game anytime you want and will win the current prize money.");
	printf("\nBut if you answer a question wrong then you will fall below checkpoints: ");
	printf("\nFor example if answer give a wrong answer for the question 1 to 5, then you will fall down to Rs. 0.");
	printf("\nSimilarly if answer give a wrong answer for the question 6 to 10, then you will fall down to Rs. 10000.");
	printf("\nSimilarly if answer give a wrong answer for the question 11 to 15, then you will fall down to Rs. 320000.");
	printf("\n\n\n\tPress any key to Start!!");
	getch();
}

int lifelines()
{
	int lifeline=0;
	if(life_50)
		printf("\nPress 1 for 50-50\t");
	if(life_skip)
		printf("\nPress 2 for SKIP\t");
	lifeline=getche();
	if(lifeline!='1' && lifeline!='2')
	{
		printf("\nPlease enter valid choice!!\t");
		while(lifeline!=1 && lifeline!=2)
			lifeline=getche();
	}
	if(lifeline=='1')
	{
		life_50--;
		return 1;
	}	
	else if(lifeline=='2')
	{
		life_skip--;
		return 2;
	}
}

char is_valid_timer(char option,int timer,int time)
{
	int x,y,i;
	if(life_50 || life_skip)
	{
		if(option!='0' && option!='Q' && option!='L' && option!='A' && option!='B' && option!='C' && option!='D')
		{
			printf("\nPlease enter valid choice!!\t");
			x=wherex();
			y=wherey();
			for(i=timer;i<=time;i++)
	    	{
	    		gotoxy(75,4);
	    		printf("%d",i);
	    		if(option!='0' && option!='Q' && option!='L' && option!='A' && option!='B' && option!='C' && option!='D')
	    		{
	    			gotoxy(x,y);
		    		if(kbhit())
		    		{
						option=toupper(getch());
					}
					sleep(1);
				}
				else
					break;
			}
			gotoxy(x,y);	
		}
	}	
	else
	{
		if(option!='0' && option!='Q' && option!='A' && option!='B' && option!='C' && option!='D')
		{
			printf("\nPlease enter valid choice!!\t");
			x=wherex();
			y=wherey();
			for(i=timer;i<=time;i++)
	    	{
	    		gotoxy(75,4);
	    		printf("%d",i);
	    		if(option!='0' && option!='Q' && option!='A' && option!='B' && option!='C' && option!='D')
	    		{
	    			gotoxy(x,y);
		    		if(kbhit())
		    		{
						option=toupper(getch());
					}
					sleep(1);
				}
				else
					break;
			}
			gotoxy(x,y);	
		}
	}
	return option;
}

char is_valid_no_timer(char option)
{
	printf("\nPlease enter valid choice!!\t");
	if(life_50 || life_skip)
	{
		while(option!='0' && option!='Q' && option!='L' && option!='A' && option!='B' && option!='C' && option!='D')
		{
			option=toupper(getch());
		}
	}
	else
	{
		while(option!='0' && option!='Q' && option!='A' && option!='B' && option!='C' && option!='D')
		{
			option=toupper(getch());
		}
	}
	return option;
}
